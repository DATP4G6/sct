species Terminator(int generationLimit, int generationCount) {
    state Charging {
        if (generationCount == generationLimit) {
            enter Terminating;
        }
        generationCount = generationCount + 1;
        enter Charging;
    }

    state Terminating {
        exit;
    }
}

species Town(int generationCount, int everyCalled, int everyOtherCalled) {

    decorator shouldBeCalledEveryGeneration {
        everyCalled = everyCalled + 1;
    }

    decorator shouldBeCalledEveryOtherGeneration {
        everyOtherCalled = everyOtherCalled + 1;
    }

    @shouldBeCalledEveryGeneration
    @shouldBeCalledEveryOtherGeneration
    state Even {
        generationCount = generationCount + 1;
        enter Odd;
    }

    @shouldBeCalledEveryGeneration
    state Odd {
        generationCount = generationCount + 1;
        enter Even;
    }
}

function setup() -> void {
    create Town::Even(generationCount: 0, everyCalled: 0, everyOtherCalled: 0);
    create Terminator::Charging(generationLimit: 10, generationCount: 0);
}
