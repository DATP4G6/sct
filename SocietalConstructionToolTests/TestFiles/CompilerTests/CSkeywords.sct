function Setup() -> void {
    // https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/
    // C# keywords
    int abstract = 1;
    int as = 1;
    int base = 1;
    int bool = 1;
    // int break = 1;
    int byte = 1;
    int case = 1;
    int catch = 1;
    int char = 1;
    int checked = 1;
    // int species = 1;
    int const = 1;
    // int continue = 1;
    int decimal = 1;
    int default = 1;
    int delegate = 1;
    int do = 1;
    int double = 1;
    // int else = 1;
    int enum = 1;
    int event = 1;
    int explicit = 1;
    int extern = 1;
    int false = 1;
    int finally = 1;
    int fixed = 1;
    // int float = 1;
    int for = 1;
    int foreach = 1;
    int goto = 1;
    // int if = 1;
    int implicit = 1;
    int in = 1;
    // int int = 1;
    int interface = 1;
    int internal = 1;
    int is = 1;
    int lock = 1;
    int long = 1;
    int namespace = 1;
    int new = 1;
    int null = 1;
    int object = 1;
    int operator = 1;
    int out = 1;
    int override = 1;
    int params = 1;
    int private = 1;
    int protected = 1;
    int public = 1;
    int readonly = 1;
    int ref = 1;
    // int return = 1;
    int sbyte = 1;
    int sealed = 1;
    int short = 1;
    int sizeof = 1;
    int stackalloc = 1;
    int static = 1;
    int string = 1;
    int struct = 1;
    int switch = 1;
    int this = 1;
    int throw = 1;
    int true = 1;
    int try = 1;
    int typeof = 1;
    int uint = 1;
    int ulong = 1;
    int unchecked = 1;
    int unsafe = 1;
    int ushort = 1;
    int using = 1;
    int virtual = 1;
    // int void = 1;
    int volatile = 1;
    // int while = 1;

    // Contextual keywords
    int add = 1;
    int and = 1;
    int alias = 1;
    int ascending = 1;
    int args = 1;
    int async = 1;
    int await = 1;
    int by = 1;
    int descending = 1;
    int dynamic = 1;
    int equals = 1;
    int file = 1;
    int from = 1;
    int get = 1;
    int global = 1;
    int group = 1;
    int init = 1;
    int into = 1;
    int join = 1;
    int let = 1;
    int managed = 1;
    int nameof = 1;
    int nint = 1;
    int not = 1;
    int notnull = 1;
    int nuint = 1;
    int on = 1;
    int or = 1;
    int orderby = 1;
    int partial = 1;
    int record = 1;
    int remove = 1;
    int required = 1;
    int scoped = 1;
    int select = 1;
    int set = 1;
    int unmanaged = 1;
    int value = 1;
    int var = 1;
    int when = 1;
    int where = 1;
    int with = 1;
    int yield = 1;
}
