namespace MyNamespace
{
    using Sct.Runtime;

    public class GlobalClass
    {
        public class __sct_Citizen : BaseAgent
        {
            private int __sct_id { get => Fields["__sct_id"]; set => Fields["__sct_id"] = value; }
            private float __sct_height { get => Fields["__sct_height"]; set => Fields["__sct_height"] = value; }

            public __sct_Citizen(string state, IDictionary<string, dynamic> fields) : base(state, fields)
            {
            }

            private bool __sct_Adult(IRuntimeContext ctx)
            {
                ctx.AgentHandler.CreateAgent(new __sct_Citizen("__sct_Adult", new Dictionary(new KeyValuePair("__sct_id", 5), new KeyValuePair("__sct_height", 20.5))));
                return false;
            }

            public override BaseAgent Clone()
            {
                return new __sct_Citizen(State, Fields);
            }

            public override void Update(IRuntimeContext ctx)
            {
                State switch
                {
                    "__sct_Adult" => __sct_Adult(ctx)};
            }
        }

        public static void Main(string[] args)
        {
            Runtime runtime = new Runtime();
            RuntimeContext ctx = RuntimeContextFactory.CreateFromArgs(args);
            __sct_Setup(ctx);
            runtime.Run(ctx);
        }
    }
}