namespace SctGenerated
{
    using Sct.Runtime;
    using System;
    using System.Collections.Generic;

    public class GlobalClass
    {
        public class __sct_Citizen : BaseAgent
        {
            public __sct_Citizen(String state, IDictionary<String, dynamic> fields) : base(state, fields)
            {
            }

            private bool __sct_Adult(IRuntimeContext ctx)
            {
                ctx.AgentHandler.CreateAgent(new __sct_Citizen("__sct_Adult", new Dictionary<String, dynamic>(new KeyValuePair<String, dynamic>[] { })));
                return false;
            }

            public override void Update(IRuntimeContext ctx)
            {
                _ = State switch
                {
                    "__sct_Adult" => __sct_Adult(ctx)};
            }
        }

        public static void Main(String[] args)
        {
            IRuntimeContext ctx = RuntimeContextFactory.CreateFromArgs(args);
            RunSimulation(ctx);
        }

        public static void RunSimulation(IRuntimeContext ctx)
        {
            Runtime runtime = new Runtime();
            __sct_Setup(ctx);
            runtime.Run(ctx);
        }
    }
}