namespace MyNamespace
{
    public class GlobalClass
    {
        public class __sct_Town : Sct.Runtime.BaseAgent
        {
            public __sct_Town(string state, IDictionary<string, dynamic> fields) : base(state, fields)
            {
            }

            private bool __sct_decor(IRuntimeContext ctx)
            {
            }

            private void __sct_Stable(IRuntimeContext ctx)
            {
                __sct_decor(ctx);
            }

            private void __sct_Growing(IRuntimeContext ctx)
            {
            }

            public override BaseAgent Clone()
            {
                return new __sct_Town(State, Fields);
            }

            public override void Update(IRuntimeContext ctx)
            {
                State switch
                {
                    "__sct_Stable" => __sct_Stable(ctx),
                    "__sct_Growing" => __sct_Growing(ctx)};
            }
        }

        public static void Main()
        {
            Runtime runtime = new Runtime();
            RuntimeContext ctx = new RuntimeContext();
            __sct_Setup(ctx);
            runtime.Run(ctx);
        }
    }
}