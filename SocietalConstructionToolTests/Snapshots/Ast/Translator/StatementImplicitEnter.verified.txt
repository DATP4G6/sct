namespace SctGenerated
{
    using Sct.Runtime;
    using System;
    using System.Collections.Generic;

    public class GlobalClass
    {
        public class __sct_Citizen : BaseAgent
        {
            public __sct_Citizen(String state, IDictionary<String, dynamic> fields) : base(state, fields)
            {
            }

            private bool __sct_Child(IRuntimeContext ctx)
            {
                if ((1L) != 0L)
                {
                    {
                        Enter(ctx, "__sct_Adult");
                        return true;
                    }
                }

                {
                    Enter(ctx, "__sct_Child");
                    return true;
                }

                return false;
            }

            private bool __sct_Adult(IRuntimeContext ctx)
            {
                {
                    Enter(ctx, "__sct_Adult");
                    return true;
                }

                return false;
            }

            public override void Update(IRuntimeContext ctx)
            {
                _ = State switch
                {
                    "__sct_Child" => __sct_Child(ctx),
                    "__sct_Adult" => __sct_Adult(ctx)};
            }
        }

        public static void RunSimulation(IRuntimeContext ctx)
        {
            Runtime runtime = new Runtime();
            __sct_setup(ctx);
            runtime.Run(ctx);
        }
    }
}