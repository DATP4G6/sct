{
  Functions: {
    $type: IEnumerable<SctFunctionSyntax>,
    $values: [
      {
        Id: f,
        Parameters: {
          $type: IEnumerable<SctParameterSyntax>,
          $values: []
        },
        ReturnType: {
          Type: Void
        },
        Block: {
          Statements: {
            $type: IEnumerable<SctStatementSyntax>,
            $values: [
              {
                $type: SctExpressionStatementSyntax,
                Expression: {
                  $type: SctCallExpressionSyntax,
                  Target: exists,
                  Expressions: {
                    $type: IEnumerable<SctExpressionSyntax>,
                    $values: [
                      {
                        $type: SctPredicateExpressionSyntax,
                        ClassName: Foo,
                        StateName: Bar,
                        Fields: {
                          a: {
                            $type: SctLiteralExpressionSyntax<long>,
                            Type: {
                              Type: Int
                            },
                            Value: 2
                          },
                          b: {
                            $type: SctLiteralExpressionSyntax<long>,
                            Type: {
                              Type: Int
                            },
                            Value: 3
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                $type: SctExpressionStatementSyntax,
                Expression: {
                  $type: SctCallExpressionSyntax,
                  Target: exists,
                  Expressions: {
                    $type: IEnumerable<SctExpressionSyntax>,
                    $values: [
                      {
                        $type: SctPredicateExpressionSyntax,
                        ClassName: Foo,
                        StateName: Bar,
                        Fields: null
                      }
                    ]
                  }
                }
              },
              {
                $type: SctExpressionStatementSyntax,
                Expression: {
                  $type: SctCallExpressionSyntax,
                  Target: exists,
                  Expressions: {
                    $type: IEnumerable<SctExpressionSyntax>,
                    $values: [
                      {
                        $type: SctPredicateExpressionSyntax,
                        ClassName: Foo,
                        StateName: null,
                        Fields: {
                          a: {
                            $type: SctLiteralExpressionSyntax<long>,
                            Type: {
                              Type: Int
                            },
                            Value: 3
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                $type: SctExpressionStatementSyntax,
                Expression: {
                  $type: SctCallExpressionSyntax,
                  Target: exists,
                  Expressions: {
                    $type: IEnumerable<SctExpressionSyntax>,
                    $values: [
                      {
                        $type: SctPredicateExpressionSyntax,
                        ClassName: Foo,
                        StateName: null,
                        Fields: null
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ]
  },
  Classes: {
    $type: IEnumerable<SctClassSyntax>,
    $values: [
      {
        Id: Foo,
        Parameters: {
          $type: IEnumerable<SctParameterSyntax>,
          $values: [
            {
              Type: {
                Type: Int
              },
              Id: a
            },
            {
              Type: {
                Type: Int
              },
              Id: b
            }
          ]
        },
        Decorators: {
          $type: IEnumerable<SctDecoratorSyntax>,
          $values: []
        },
        States: {
          $type: IEnumerable<SctStateSyntax>,
          $values: [
            {
              Id: Bar,
              Decorations: null,
              Block: {
                Statements: {
                  $type: IEnumerable<SctStatementSyntax>,
                  $values: []
                }
              }
            }
          ]
        },
        Functions: {
          $type: IEnumerable<SctFunctionSyntax>,
          $values: []
        }
      }
    ]
  }
}