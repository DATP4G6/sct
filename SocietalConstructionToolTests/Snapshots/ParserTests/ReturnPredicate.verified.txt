(start (class_def species Citizen ( (args_def (type int) townId) ) { (class_body (state state Child { (statement_list (statement (enter enter Adult ;))) }) (state state Adult { (statement_list (statement (enter enter Adult ;))) })) }) (function function getChildPredicate ( (args_def (type int) id) ) -> (type Predicate) { (statement_list (statement (return return (expression (agent_predicate Citizen :: Child ( (args_agent townId : (expression id)) ))) ;))) }) (function function Setup ( args_def ) -> (type void) { (statement_list (statement (declaration (type int) townId = (expression (literal 5)) ;)) (statement (declaration (type int) childrenCount = (expression (call_expression count ( (args_call (expression (call_expression getChildPredicate ( (args_call (expression townId)) )))) ))) ;))) }) <EOF>)