(start (function function setup ( args_def ) -> (type void) { (statement_list (statement (declaration (type int) a = (expression (expression (expression (literal 1)) * (expression (literal 2))) / (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) % (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) + (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) - (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) * (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) * (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) % (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) + (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) - (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) / (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) * (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) / (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) + (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) - (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) % (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) + (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) + (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) + (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) - (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) + (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) - (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) - (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) - (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) + (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) - (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) > (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) > (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) > (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) > (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) > (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) > (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) > (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) > (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) > (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) > (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) > (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) > (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) < (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) < (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) < (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) < (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) < (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) < (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) < (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) < (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) < (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) < (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) < (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) < (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) >= (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) >= (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) >= (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) >= (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) >= (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) >= (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) >= (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) >= (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) >= (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) >= (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) >= (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) >= (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) <= (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) <= (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) <= (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) <= (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) <= (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) <= (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) <= (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) <= (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) <= (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) <= (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) <= (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) <= (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) == (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) == (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) == (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) == (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) == (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) == (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) == (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) == (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) == (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) == (expression (literal 2))) != (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) == (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) == (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) != (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) != (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) != (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) != (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) != (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) != (expression (literal 2))) > (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) != (expression (literal 2))) < (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) != (expression (literal 2))) >= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) != (expression (literal 2))) <= (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) != (expression (literal 2))) == (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) != (expression (literal 2))) && (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) != (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) > (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) < (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) >= (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) <= (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) == (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) && (expression (expression (literal 2)) != (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (expression (literal 1)) && (expression (literal 2))) || (expression (literal 3))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) * (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) / (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) % (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) + (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) - (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) > (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) < (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) >= (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) <= (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) == (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) != (expression (literal 3)))) ;)) (statement (assignment a = (expression (expression (literal 1)) || (expression (expression (literal 2)) && (expression (literal 3)))) ;))) }) <EOF>)