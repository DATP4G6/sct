(start (class_def class Foo ( args_def ) { (class_body (state state Bar { statement_list })) }) (function function f ( args_def ) -> (type void) { (statement_list (statement (expression exists ( (args_call (expression (agent_predicate Foo :: Bar ( args_agent )))) )) ;) (statement (expression count ( (args_call (expression (agent_predicate Foo :: Bar ( args_agent )))) )) ;) (statement (expression rand ( args_call )) ;) (statement (expression seed ( (args_call (expression 123)) )) ;)) }) <EOF>)