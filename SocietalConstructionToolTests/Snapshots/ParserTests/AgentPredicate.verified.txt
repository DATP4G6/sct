(start (class_def class Foo ( (args_def (type int) a , (type int) b) ) { (class_body (state state Bar { statement_list })) }) (function function f ( args_def ) -> (type void) { (statement_list (statement (expression_statement (call_expression exists ( (args_call (expression (agent_predicate Foo :: Bar ( (args_agent a : (expression 2) , b : (expression 3)) )))) ))) ;) (statement (expression_statement (call_expression exists ( (args_call (expression (agent_predicate Foo :: Bar ( args_agent )))) ))) ;) (statement (expression_statement (call_expression exists ( (args_call (expression (agent_predicate Foo :: ? ( (args_agent a : (expression 3)) )))) ))) ;) (statement (expression_statement (call_expression exists ( (args_call (expression (agent_predicate Foo :: ? ( args_agent )))) ))) ;)) }) <EOF>)